############################################
###       APPLICATION PARAMETERS         ###
############################################

# Address and port where the http webserver listening (0.0.0.0 denotes all available IP addresses)
server.address=0.0.0.0
server.port=8443

# Database connection (mandatory)
# Change the server timezone if neccessary
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/ah_serviceregistry?serverTimezone=Europe/Budapest
spring.datasource.username=serviceregistry
spring.datasource.password=IsD3KDg8yfUblab
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=validate
# use true only for debugging
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true


############################################
###          CUSTOM PARAMETERS           ###
############################################

# Address to register into Service Registry with
domain.name=127.0.0.1

# Method to authenticate service requester systems
authentication.policy=declared

# Secret key for the authentication server when authentication policy is 'outsourced'
# authenticator.secret.key=

# Enable/disable automatic authorization for management services
enable.management.filter=true

# Define the access policy for management services
# Values: sysop-only, whitelist, authorization
management.policy=sysop-only

# Name of systems which can access management service in case of whitelist policy
# management.whitelist=

# Enable/disable automatic system name verification against cloud level blacklist (lookup for 'blacklist' service and use it)
enable.blacklist.filter=true

# Show all request/response in debug log
log.all.request.and.response=false

# Set to open in order to make services directly discoverable [open, restricted]
# When 'restricted', only the public core services are discoverable directly
service.discovery.policy=restricted

# Can service lookup response contain system/device details (default is false)?
service.discovery.verbose=false

# Name of systems which always have direct access to service discovery (can also access to verbose information)
service.discovery.direct.access=sysop,service-orchestration

# Set to open in order to allow register interfaces during service registration [open, restricted]
# When 'restricted' only the already existing interface templates can be used,
service.discovery.interface.policy=restricted
